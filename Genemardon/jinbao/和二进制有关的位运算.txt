==============================1、一个数在二进制中1的个数是奇数个还是偶数个===============================
int Count(int x){ 
    for (int i=1;i<=16;i=i<<1)
        x=x^(x>>i);
    return x&1;
}
==============================2、一个数在二进制中1的个数================================================
int Count(int n) { 
    n = (n &0x55555555) + ((n >>1) &0x55555555) ; 
    n = (n &0x33333333) + ((n >>2) &0x33333333) ;
    n = (n &0x0f0f0f0f) + ((n >>4) &0x0f0f0f0f) ;
    n = (n &0x00ff00ff) + ((n >>8) &0x00ff00ff) ;
    n = (n &0x0000ffff) + ((n >>16) &0x0000ffff) ;
    return n ; 
}
==============================3、二分查找32位整数的前导0个数============================================
int Count(int x){
   int n;
   if (x == 0) return 32;
   n = 1;
   if ((x >> 16) == 0) {n = n +16; x = x <<16;}
   if ((x >> 24) == 0) {n = n + 8; x = x << 8;}
   if ((x >> 28) == 0) {n = n + 4; x = x << 4;}
   if ((x >> 30) == 0) {n = n + 2; x = x << 2;}
   n = n - (x >> 31);
   return n;
}
==============================4、高低位交换============================================================
给出一个小于2^32的正整数。这个数可以用一个32位的二进制数表示（不足32位用0补足）。我们称这个二进制数的前16位为“高位”，后16位为“低位”。将它的高低位交换，我们可以得到一个新的数.
int Change(int x){
    return (x<<16)|(x>>16);
}





