/*******************************************************************************
 * Author :          jinbao
 * Email :           dongjinbao913106840144@gmail.com
 * Last modified :   2015-06-15 19:10
 * Filename :        PolyGame.cpp
 * Description :     
 * *****************************************************************************/
#include <iostream>
using namespace std;
#define N 200
int m[N][N][2];
int v[N];
char op[N];
void Initiate(int n)
{
    for(int i=n;i>=1;i--)  cin>>v[i]>>op[i];
    for(int i=1;i<=n;i++)
    {
        m[i][1][0]=v[i];
        m[i][1][1]=v[i];
    }
}
void MIN_MAX(int n, int i, int s, int j,int &minf, int &maxf)
{
    int e[5];
    int a,b,c,d,r;
    a=m[i][s][0];
    b=m[i][s][1];
    r=(i+s-1)%n+1;
    c=m[r][j-s][0];
    d=m[r][j-s][1];
    if(op[r]=='+')
    {
        minf=a+c;
        maxf=b+d;
    }
    else
    {
        e[1]=a*c;
        e[2]=a*d;
        e[3]=b*c;
        e[4]=b*d;
        minf=e[1];
        maxf=e[1];
        for (int k=2; k<=4; k++)
        {
            if (minf>e[k]) minf=e[k];
            if (maxf<e[k])maxf=e[k];
        }
    }
}
int Poly_max(int n)
{
    int minf,maxf;
    for (int j=2; j<=n; j++)
        for (int i=1; i<=n; i++)
            for (int s=1; s<j; s++)
            {
                 MIN_MAX(n,i,s,j,minf,maxf);
                if (m[i][j][0]>minf) m[i][j][0]=minf;
                if (m[i][j][1]<maxf) m[i][j][1]=maxf;
            }
    int temp=m[1][n][1];
    for (int i=2; i<=n; i++)
    {
        if (temp<m[i][n][1]) temp=m[i][n][1];
    }
    return temp;
}
int main()
{
    int n;
    cin>>n;
    Initiate(n);
    cout<<Poly_max(n)<<endl;
    return 0;
}
